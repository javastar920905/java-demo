<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gupao.dal.dao.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.gupao.dal.dao.Article">
    <id column="auto_id" jdbcType="BIGINT" property="autoId" />
    <result column="article_id" jdbcType="VARCHAR" property="articleId" />
    <result column="article_type" jdbcType="VARCHAR" property="articleType" />
    <result column="platform" jdbcType="VARCHAR" property="platform" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="article_tag" jdbcType="VARCHAR" property="articleTag" />
    <result column="source_url" jdbcType="VARCHAR" property="sourceUrl" />
    <result column="publish_time" jdbcType="VARCHAR" property="publishTime" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="is_origin" jdbcType="TINYINT" property="isOrigin" />
    <result column="related_article_id" jdbcType="VARCHAR" property="relatedArticleId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.gupao.dal.dao.ArticleWithBLOBs">
    <result column="article_content" jdbcType="LONGVARCHAR" property="articleContent" />
    <result column="article_content_html" jdbcType="LONGVARCHAR" property="articleContentHtml" />
    <result column="article_content_full_html" jdbcType="LONGVARCHAR" property="articleContentFullHtml" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    auto_id, article_id, article_type, platform, author, title, article_tag, source_url, 
    publish_time, create_time, is_origin, related_article_id
  </sql>
  <sql id="Blob_Column_List">
    article_content, article_content_html, article_content_full_html
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.gupao.dal.dao.ArticleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.gupao.dal.dao.ArticleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where auto_id = #{autoId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from article
    where auto_id = #{autoId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.gupao.dal.dao.ArticleExample">
    delete from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gupao.dal.dao.ArticleWithBLOBs">
    insert into article (auto_id, article_id, article_type, 
      platform, author, title, 
      article_tag, source_url, publish_time, 
      create_time, is_origin, related_article_id, 
      article_content, article_content_html, 
      article_content_full_html)
    values (#{autoId,jdbcType=BIGINT}, #{articleId,jdbcType=VARCHAR}, #{articleType,jdbcType=VARCHAR}, 
      #{platform,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{articleTag,jdbcType=VARCHAR}, #{sourceUrl,jdbcType=VARCHAR}, #{publishTime,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=VARCHAR}, #{isOrigin,jdbcType=TINYINT}, #{relatedArticleId,jdbcType=VARCHAR}, 
      #{articleContent,jdbcType=LONGVARCHAR}, #{articleContentHtml,jdbcType=LONGVARCHAR}, 
      #{articleContentFullHtml,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.gupao.dal.dao.ArticleWithBLOBs">
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="autoId != null">
        auto_id,
      </if>
      <if test="articleId != null">
        article_id,
      </if>
      <if test="articleType != null">
        article_type,
      </if>
      <if test="platform != null">
        platform,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="articleTag != null">
        article_tag,
      </if>
      <if test="sourceUrl != null">
        source_url,
      </if>
      <if test="publishTime != null">
        publish_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="isOrigin != null">
        is_origin,
      </if>
      <if test="relatedArticleId != null">
        related_article_id,
      </if>
      <if test="articleContent != null">
        article_content,
      </if>
      <if test="articleContentHtml != null">
        article_content_html,
      </if>
      <if test="articleContentFullHtml != null">
        article_content_full_html,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="autoId != null">
        #{autoId,jdbcType=BIGINT},
      </if>
      <if test="articleId != null">
        #{articleId,jdbcType=VARCHAR},
      </if>
      <if test="articleType != null">
        #{articleType,jdbcType=VARCHAR},
      </if>
      <if test="platform != null">
        #{platform,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="articleTag != null">
        #{articleTag,jdbcType=VARCHAR},
      </if>
      <if test="sourceUrl != null">
        #{sourceUrl,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null">
        #{publishTime,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="isOrigin != null">
        #{isOrigin,jdbcType=TINYINT},
      </if>
      <if test="relatedArticleId != null">
        #{relatedArticleId,jdbcType=VARCHAR},
      </if>
      <if test="articleContent != null">
        #{articleContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="articleContentHtml != null">
        #{articleContentHtml,jdbcType=LONGVARCHAR},
      </if>
      <if test="articleContentFullHtml != null">
        #{articleContentFullHtml,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gupao.dal.dao.ArticleExample" resultType="java.lang.Long">
    select count(*) from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update article
    <set>
      <if test="record.autoId != null">
        auto_id = #{record.autoId,jdbcType=BIGINT},
      </if>
      <if test="record.articleId != null">
        article_id = #{record.articleId,jdbcType=VARCHAR},
      </if>
      <if test="record.articleType != null">
        article_type = #{record.articleType,jdbcType=VARCHAR},
      </if>
      <if test="record.platform != null">
        platform = #{record.platform,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.articleTag != null">
        article_tag = #{record.articleTag,jdbcType=VARCHAR},
      </if>
      <if test="record.sourceUrl != null">
        source_url = #{record.sourceUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.publishTime != null">
        publish_time = #{record.publishTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.isOrigin != null">
        is_origin = #{record.isOrigin,jdbcType=TINYINT},
      </if>
      <if test="record.relatedArticleId != null">
        related_article_id = #{record.relatedArticleId,jdbcType=VARCHAR},
      </if>
      <if test="record.articleContent != null">
        article_content = #{record.articleContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.articleContentHtml != null">
        article_content_html = #{record.articleContentHtml,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.articleContentFullHtml != null">
        article_content_full_html = #{record.articleContentFullHtml,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update article
    set auto_id = #{record.autoId,jdbcType=BIGINT},
      article_id = #{record.articleId,jdbcType=VARCHAR},
      article_type = #{record.articleType,jdbcType=VARCHAR},
      platform = #{record.platform,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      article_tag = #{record.articleTag,jdbcType=VARCHAR},
      source_url = #{record.sourceUrl,jdbcType=VARCHAR},
      publish_time = #{record.publishTime,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      is_origin = #{record.isOrigin,jdbcType=TINYINT},
      related_article_id = #{record.relatedArticleId,jdbcType=VARCHAR},
      article_content = #{record.articleContent,jdbcType=LONGVARCHAR},
      article_content_html = #{record.articleContentHtml,jdbcType=LONGVARCHAR},
      article_content_full_html = #{record.articleContentFullHtml,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update article
    set auto_id = #{record.autoId,jdbcType=BIGINT},
      article_id = #{record.articleId,jdbcType=VARCHAR},
      article_type = #{record.articleType,jdbcType=VARCHAR},
      platform = #{record.platform,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      article_tag = #{record.articleTag,jdbcType=VARCHAR},
      source_url = #{record.sourceUrl,jdbcType=VARCHAR},
      publish_time = #{record.publishTime,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      is_origin = #{record.isOrigin,jdbcType=TINYINT},
      related_article_id = #{record.relatedArticleId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gupao.dal.dao.ArticleWithBLOBs">
    update article
    <set>
      <if test="articleId != null">
        article_id = #{articleId,jdbcType=VARCHAR},
      </if>
      <if test="articleType != null">
        article_type = #{articleType,jdbcType=VARCHAR},
      </if>
      <if test="platform != null">
        platform = #{platform,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="articleTag != null">
        article_tag = #{articleTag,jdbcType=VARCHAR},
      </if>
      <if test="sourceUrl != null">
        source_url = #{sourceUrl,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null">
        publish_time = #{publishTime,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="isOrigin != null">
        is_origin = #{isOrigin,jdbcType=TINYINT},
      </if>
      <if test="relatedArticleId != null">
        related_article_id = #{relatedArticleId,jdbcType=VARCHAR},
      </if>
      <if test="articleContent != null">
        article_content = #{articleContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="articleContentHtml != null">
        article_content_html = #{articleContentHtml,jdbcType=LONGVARCHAR},
      </if>
      <if test="articleContentFullHtml != null">
        article_content_full_html = #{articleContentFullHtml,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where auto_id = #{autoId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.gupao.dal.dao.ArticleWithBLOBs">
    update article
    set article_id = #{articleId,jdbcType=VARCHAR},
      article_type = #{articleType,jdbcType=VARCHAR},
      platform = #{platform,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      article_tag = #{articleTag,jdbcType=VARCHAR},
      source_url = #{sourceUrl,jdbcType=VARCHAR},
      publish_time = #{publishTime,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      is_origin = #{isOrigin,jdbcType=TINYINT},
      related_article_id = #{relatedArticleId,jdbcType=VARCHAR},
      article_content = #{articleContent,jdbcType=LONGVARCHAR},
      article_content_html = #{articleContentHtml,jdbcType=LONGVARCHAR},
      article_content_full_html = #{articleContentFullHtml,jdbcType=LONGVARCHAR}
    where auto_id = #{autoId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gupao.dal.dao.Article">
    update article
    set article_id = #{articleId,jdbcType=VARCHAR},
      article_type = #{articleType,jdbcType=VARCHAR},
      platform = #{platform,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      article_tag = #{articleTag,jdbcType=VARCHAR},
      source_url = #{sourceUrl,jdbcType=VARCHAR},
      publish_time = #{publishTime,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      is_origin = #{isOrigin,jdbcType=TINYINT},
      related_article_id = #{relatedArticleId,jdbcType=VARCHAR}
    where auto_id = #{autoId,jdbcType=BIGINT}
  </update>
</mapper>