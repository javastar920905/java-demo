version = "1.0"
subprojects {
    apply plugin: 'java'
    apply plugin: "groovy"
    apply plugin: 'eclipse'

    group = 'com.javastar920905'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = 1.8
    targetCompatibility = "1.8"

    repositories {
        mavenCentral()
    }

    ext {
        springVersion = "4.3.2.RELEASE"
        slf4jVersion = "1.7.21"
        logbackVersion = "1.1.6"
        httpcomponentsVersion = "4.5.1"
        shiroVersion = "1.3.2"
        poiVersion = "3.9"
        motanVersion = "0.3.0"
        pagehelperVersion = "5.1.2"
        mybatisVersion = "3.4.2"
        qcloudVersion = "4.4"
        aspectjVersion = "1.8.10"
        rabbitmqVersion = "4.1.0"
        esVersion = "5.2.1"
        apolloVer = "0.7.0-dev"
        redlockVersion = "3.5.0"
    }

    configurations {
        compile.exclude module: "slf4j-log4j12"
    }

    dependencies{
        //lombok
        compile("org.projectlombok:lombok:1.16.18")
        //logback 依赖
        compile("org.slf4j:slf4j-api:${slf4jVersion}")
        compile("org.slf4j:log4j-over-slf4j:${slf4jVersion}")
        compile("ch.qos.logback:logback-core:${logbackVersion}")
        compile("ch.qos.logback:logback-access:${logbackVersion}")
        compile("ch.qos.logback:logback-classic:${logbackVersion}")
        compile("net.logstash.logback:logstash-logback-encoder:4.7")

        //apache common
        compile("org.apache.commons:commons-lang3:3.4")
        //fastjson
        compile("com.alibaba:fastjson:1.2.13")

        /*私有仓库
        compile("sourceforge.net:cpdetector:1.0.10")*/
    }

    //解决提示"GBK"编码错误
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }
}


/*findMainClass.doFirst {
    File localFile = file("build/classes/main/com/rencaijia/local/LocalConfig.class")
    File localFile1 = file("build/classes/main/local/Local_Config.class")
    File localFile2 = file("build/resources/main/config/application.yml")
    if (localFile.exists()) {
        println("删除本地配置文件" + localFile.name + "-" + localFile2.name)
        localFile.delete()
    }
    if (localFile2.exists()) {
        localFile2.delete()
    }
    if (localFile1.exists()) {
        localFile1.delete()
    }
}*/

/*
// 上传jar包到artifactory
apply plugin: "com.jfrog.artifactory"
apply plugin: "maven-publish"

artifactory {
    contextUrl = "http://58.250.63.90:8081/artifactory/"
    publish {
        repository {
            repoKey = "javastar-local"   //The Artifactory repository key to publish to
            username = "admin"          //The publisher user name
            password = "1qaz2wsx"       //The publisher password
        }

        defaults {
            publications("tools", "html2pdf", "pay")
            publishConfigs("archives", "published")
        }
    }
}

publishing {
    publications {
        tools(MavenPublication) {
            groupId "com.javastar"
            artifactId "tools"
            version "1.0.0"
            // Tell maven to prepare the generated "common.jar" file for publishing
            artifact("tools/build/libs/tools.jar")
        }

        html2pdf(MavenPublication) {
            groupId "com.javastar"
            artifactId "doc"
            version "1.0.0"
            artifact("html2pdf/build/libs/html2pdf.jar")
        }

        pay(MavenPublication) {
            groupId "com.javastar"
            artifactId "pay"
            version "1.0.0"
            artifact("pay/build/libs/pay.jar")
        }

    }
}*/
